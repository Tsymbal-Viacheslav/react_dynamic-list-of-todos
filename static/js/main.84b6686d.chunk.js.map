{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","setUserId","className","map","todo","id","completed","classNames","title","type","onClick","userId","TodoFilter","setFilter","useState","searchValue","setSearchValue","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","user","setUser","useEffect","getUser","href","name","App","setTodos","filter","todoId","setTodoId","find","tds","length","visibleTodos","filt","todoArr","includes","visibleMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84b6686d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | undefined,\n  selectTodo: (selectedTodoId: number) => void\n  selectedTodoId: number,\n  setUserId: React.Dispatch<React.SetStateAction<number>>\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n  setUserId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos && todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed === true && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === todo.id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectTodo(0);\n                    setUserId(0);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectTodo(todo.id);\n                    setUserId(todo.userId);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\n\ntype Props = {\n  setFilter: React.Dispatch<React.SetStateAction<string>>\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setFilter }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setFilter(event.target.value);\n            }}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={searchValue}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => {\n            setFilter(event.target.value);\n            setSearchValue(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              setFilter('');\n              setSearchValue('');\n            }}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  userId: number;\n  setUserId: React.Dispatch<React.SetStateAction<number>>;\n  selectTodo: (selectedTodoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  userId,\n  setUserId,\n  selectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser);\n  }, []);\n\n  const { id, title } = selectedTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUserId(0);\n                selectTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n              {' by '}\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [todoId, setTodoId] = useState(0);\n  const [userId, setUserId] = useState<number>(0);\n\n  const selectedTodo = todos\n    .find(todo => todo.id === todoId);\n\n  useEffect(() => {\n    getTodos()\n      .then(tds => {\n        setTodos(tds);\n      });\n  }, []);\n\n  const visibleMovies = (visibleTodos: Todo[], filt: string) => {\n    let todoArr;\n\n    switch (filt) {\n      case 'all':\n        todoArr = visibleTodos;\n        break;\n\n      case 'active':\n        todoArr = [...visibleTodos].filter(todo => todo.completed === false);\n        break;\n\n      case 'completed':\n        todoArr = [...visibleTodos].filter(todo => todo.completed === true);\n        break;\n\n      default:\n        todoArr = [...visibleTodos].filter(todo => todo.title.includes(filt));\n\n        break;\n    }\n\n    return todoArr;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleMovies(todos, filter)}\n                    selectedTodoId={todoId}\n                    selectTodo={(selectedTodoId: number) => {\n                      setTodoId(selectedTodoId);\n                    }}\n                    setUserId={setUserId}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && userId && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          userId={userId}\n          setUserId={setUserId}\n          selectTodo={(selectedTodoId: number) => {\n            setTodoId(selectedTodoId);\n          }}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}